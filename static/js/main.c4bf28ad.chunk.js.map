{"version":3,"sources":["watermark.png","Components/Board.tsx","MarchingSquares.tsx","ImageProcessing.tsx","Components/Image.tsx","WorkshopLoader.tsx","Components/SelectionPolygon.tsx","Components/SelectionLayer.tsx","Components/FloatingColorPicker.tsx","OptionBar.tsx","Components/SelectionRotator.tsx","Components/InteractionLayer.tsx","App.tsx","index.tsx"],"names":["module","exports","useStyles","createUseStyles","board","position","left","top","height","width","touchAction","boardWatermark","content","backgroundImage","watermark","backgroundSize","filter","panZoom","container","target","a","parent","parentElement","rectParent","getBoundingClientRect","rectScene","Flatten","Box","right","bottom","xmin","xmax","ymin","ymax","pause","resume","showRectangle","moveBy","forwardRef","ref","motionActive","backgroundColor","onTransformChanged","onBackgroundClicked","children","showWaterMark","panZoomInstance","useRef","mouseDownTransform","panningNode","useState","isPanZoomInitialised","setIsPanZoomInitialised","useImperativeHandle","resetZoom","current","pannedRef","useCallback","node","panzoom","onTouch","ev","transform","getTransform","disableKeyboardInteraction","useEffect","on","e","classes","handleMouseUp","currentTarget","startTransform","currentTransform","x","y","scale","boardStyle","className","style","onMouseDown","onMouseUp","onTouchEnd","d3_geom_contourDx","NaN","d3_geom_contourDy","d3_geom_contourStart","grid","contour","start","s","c","dx","dy","pdx","pdy","i","push","cachedImageData","getImageData","imageUrl","workingCanvas","cachedData","loadPromise","Promise","resolve","reject","imageElement","Image","crossOrigin","onload","onerror","src","loadedImage","canvasWidth","canvasHeight","drawContext","getContext","clearRect","drawImage","pixelData","data","points","boundingPoints","dataUrl","toDataURL","value","getClipPath","imgData","clipPathSet","forEach","p","join","getBoundingPolygonPath","polygonPathSet","display","cursor","svgEntity","React","memo","url","canvas","initialX","initialY","rotate","glued","onInitialStateAvailable","onMovingStart","onMovingEnd","onMove","onMouseEnter","onMouseLeave","onSelect","dragScale","svgProps","setSvgProps","href","imgProps","setImgProps","clipPath","setClipPath","imageInitData","lastKnownPosition","lastKnownIntersectionPolygon","Polygon","imageData","imageSize","rawPolygon","map","v","point","borderPoints","computeTransformedPolygon","inUse","boundingRect","transformedPolygon","load","getStateData","dragData","updatePolygon","size","angle","Math","PI","center","box","matrix","Matrix","translate","enterHandler","leaveHandler","positionOffset","onStart","_","moveStartHandler","onStop","state","moveEndHandler","onDrag","loadWorkshop","folderUrl","workshopDataUrl","URL","fetch","method","mode","request","ok","json","jsonData","name","images","Array","Error","status","statusText","makeStyles","palette","selectionBorderSvg","pointerEvents","selectionBorderPolygon","fill","strokeWidth","strokeLinejoin","stroke","color","primary","main","light","SelectionPolygon","img","selectionLayer","SelectionLayer","hoverImage","selectedImage","selectionPolygon","hoverPolygon","modalRoot","document","getElementById","colorPickerContainer","FloatingColorPicker","initialColor","onColorChange","element","createElement","classList","add","el","currentColor","setCurrentColor","appendChild","removeChild","picker","disableAlpha","onChange","hex","createPortal","Fragment","bar","boxShadow","overflow","barSpreadButton","marginRight","barSpreadButtonWide","barToggleButton","barToggleButtonEnabled","opacity","barTitle","paddingRight","marginLeft","paddingLeft","background","backgroundRepeat","barTitleLarge","divider","buttonContainer","boxGrid","boxImage","grow","flexGrow","swappableSection","alignSelf","alignItems","swappableSet","imgBoundingBox","backgroundPosition","boxSizing","borderColor","imgTileBar","padding","imgActionUsePhoto","boxDrawer","userSelect","activeImage","workshopName","boardBackgroundColor","allImages","onZoomToFit","onUpOne","onDownOne","onRemoveImage","onUseImage","onBackgroundColorChange","onDeleteAll","onHeadingClicked","drawerOpen","setDrawerOpen","deleteAllDialogOpen","setDeleteAllDialogOpen","theme","useTheme","isBig","useMediaQuery","breakpoints","up","displayColorPicker","setDisplayColorPicker","toggleDrawer","open","event","type","key","window","history","pushState","imageDrawer","back","onpopstate","preventDefault","heading","setImageStateAndCloseDrawer","handleDeleteDialogClose","confirmed","Typography","variant","CssBaseline","AppBar","elevation","Toolbar","onClick","Divider","orientation","flexItem","Slide","direction","in","mountOnEnter","unmountOnExit","IconButton","edge","title","colorPicker","SwipeableDrawer","anchor","onOpen","onClose","GridList","cellHeight","cols","spacing","GridListTile","border","onDoubleClick","GridListTileBar","titlePosition","actionIcon","aria-label","actionPosition","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","rotator","SelectionRotator","props","overlayLayer","isRotateActive","InteractionLayer","mouseMove","touchMove","interactionEnd","touchEnd","currentBoardTransform","onRotationChanged","onRotationEnded","setRotateActive","startRotateDegrees","lastRotateDegrees","touchId","setTouchId","offsetBox","radsAngle","rotatedPoint","xOffset","yOffset","offsetCenter","getDegrees","radians","atan2","round","pageX","pageY","onTouchStart","changedTouches","identifier","degrees","touch","onTouchMove","onMouseMove","createMuiTheme","computeCanvas","visibility","App","workshop","location","hash","substring","processingCanvasEl","boardMethods","cachedImageStates","setWorkshopName","setBackgroundColor","workshopImages","setWorkshopImages","orderedImages","setOrderedImages","workshopUrl","boardMotionActive","setBoardMotionActive","hoverImageData","setHoverImageData","selectedImageData","setSelectedImageData","movingImageData","setMovingImageData","interactionTransform","setInteractionTransform","zoomToFit","cachedImages","currentBox","isFirst","thisBox","cloned","clone","callback","setTimeout","addEventListener","removeEventListener","onhashchange","reload","workshopData","existingData","localStorage","getItem","loadedImages","parsedData","JSON","parse","savedImages","cachedImg","visitedImages","savedImgIdx","findIndex","wasVisited","idx","splice","console","error","workshopLoad","saveState","cacheItem","find","cache","setItem","stringify","updateImageState","firstLoad","handleImageEnter","handleImageLeave","handleMove","handleMoveEnd","handleSelect","intersects","r1","r2","boolOp","BooleanOperations","not_intersect","intersect","length","clip","innerClip","handleImageZOrderChange","image","newIdxFunc","cacheItemIdx","cImg","moveToIdx","newState","removed","forwardZOrder","existingIdx","currentImageState","testItemIdx","testItem","backZOrder","toggleUseImage","use","workshopItemIdx","newImages","newOrderedImages","orderedIdx","item","imgStates","currentState","warn","transformChanged","ThemeProvider","toLowerCase","rotationDeg","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c4bf28ad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/watermark.af692af1.png\";","import React, { useCallback, RefForwardingComponent, useState, useEffect, useRef, forwardRef, useImperativeHandle, ReactNode } from 'react';\nimport panzoom, { Transform, PanZoom } from 'panzoom';\nimport Flatten from '@flatten-js/core';\nimport { createUseStyles } from 'react-jss';\nimport { CSSProperties } from '@material-ui/core/styles/withStyles';\nimport watermark from '../watermark.png';\n\nconst useStyles = createUseStyles({\n    board: {\n        position: \"fixed\",\n        left: 0,\n        top: 0,\n        height: 'calc(100% - 56px)',\n        width: '100%',\n        touchAction: 'none'\n    },\n\n    boardWatermark: {\n        \"&:before\": {\n            content: '\"\"',\n            backgroundImage: `url(${watermark})`,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundSize: \"contain\",\n            position: \"absolute\",\n            filter: \"contrast(0.5)\"\n        }\n    },\n\n    '@media (min-width: 600px)': {\n        board: {\n            height: 'calc(100% - 64px)',\n        },\n\n        boardWatermark: {\n            \"&:before\": {                \n                backgroundSize: \"auto\",\n            }\n        }\n    }\n});\n\nexport interface BoardMethods {\n    resetZoom(target?: Flatten.Box): void;\n}\n\nexport interface BoardProps {\n        motionActive?: boolean;\n        backgroundColor?: string;\n        onTransformChanged?: (transform: Transform) => void;\n        onBackgroundClicked?: () => void;\n        showWaterMark: boolean;\n        children?: React.ReactNode;\n}\n\nasync function resetZoom(panZoom: PanZoom, container: HTMLElement, target?: Flatten.Box)\n{\n    const parent = container.parentElement!;\n    const rectParent = parent.getBoundingClientRect();\n  \n    const rectScene = target || new Flatten.Box(rectParent.left, rectParent.top, rectParent.right, rectParent.bottom);\n\n    const padding = 60;\n\n    // Expand the rectangle slightly to make it look nicer when we center to it.\n    rectScene.xmin -= padding;\n    rectScene.xmax += padding;\n    rectScene.ymin -= padding;\n    rectScene.ymax += padding;\n\n    //we need to cancel current running animations\n    panZoom.pause();\n    panZoom.resume();\n\n    panZoom.showRectangle({\n        left: rectScene.xmin, \n        right: rectScene.xmax,\n        top: rectScene.ymin, \n        bottom: rectScene.ymax,\n        height: rectScene.ymax - rectScene.ymin,\n        width: rectScene.xmax - rectScene.xmin\n    });\n    \n    panZoom.moveBy(\n        0,\n        0,\n        true\n    );\n}\n\nconst Board: RefForwardingComponent<BoardMethods, BoardProps> = ({ \n    motionActive = true, \n    backgroundColor = \"#ffffff\",\n    onTransformChanged, \n    onBackgroundClicked, \n    children,\n    showWaterMark\n}, ref) =>\n{\n    const panZoomInstance = useRef<PanZoom | null>(null);\n    const mouseDownTransform = useRef<Transform | null>(null);\n    const panningNode = useRef<HTMLDivElement | null>(null);\n    const [isPanZoomInitialised, setIsPanZoomInitialised] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        resetZoom: (target: Flatten.Box) => {\n            if (panZoomInstance.current && panningNode.current)\n            {\n                resetZoom(panZoomInstance.current, panningNode.current, target);\n            }\n        }\n    }));\n\n    const pannedRef = useCallback((node: HTMLDivElement) => {\n\n        panningNode.current = node;\n        panZoomInstance.current = panzoom(node, {\n            onTouch: (ev) => {\n                var transform = panZoomInstance.current!.getTransform();\n                mouseDownTransform.current = {...transform};\n            },\n            disableKeyboardInteraction: true\n        });\n        setIsPanZoomInitialised(true);\n\n    }, []);\n\n    useEffect(() => {\n        \n        if (onTransformChanged && isPanZoomInitialised)\n        {\n            const panZoom = panZoomInstance.current!;\n            panZoom.on('transform', (e) => \n            {\n                var transform = panZoom.getTransform();\n                onTransformChanged({...transform});\n            });\n        }\n\n    }, [isPanZoomInitialised, onTransformChanged])\n\n    useEffect(() => {\n\n        if (!panZoomInstance.current)\n        {\n            return;\n        }\n\n        if (motionActive)\n        {\n            panZoomInstance.current!.resume();\n        }\n        else \n        {\n            panZoomInstance.current!.pause();\n        }\n\n    }, [motionActive, panZoomInstance])\n\n    const classes = useStyles();\n\n    const handleMouseDown = (ev: React.TouchEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement>) => {\n        \n        var transform = panZoomInstance.current!.getTransform();\n        mouseDownTransform.current = {...transform};\n        \n    }\n\n    const handleMouseUp = (ev: React.TouchEvent<HTMLDivElement> | React.MouseEvent<HTMLDivElement>) => {\n        if(ev.target === ev.currentTarget) {            \n            var startTransform = mouseDownTransform.current!;            \n            var currentTransform = panZoomInstance.current!.getTransform();\n\n            if (startTransform && currentTransform && \n                startTransform.x === currentTransform.x && \n                startTransform.y === currentTransform.y && \n                startTransform.scale === currentTransform.scale)\n            {\n                onBackgroundClicked?.();\n            }\n        }\n    }\n\n    const boardStyle : CSSProperties = {};\n\n    if (backgroundColor)\n    {\n        boardStyle.backgroundColor = backgroundColor;\n    }\n\n    return <div className={`${classes.board} ${showWaterMark ? classes.boardWatermark : ''}`} style={boardStyle} onMouseDown={handleMouseDown} onMouseUp={handleMouseUp} onTouchEnd={handleMouseUp}>\n        <div ref={pannedRef}>\n            {children}\n        </div>\n    </div>\n};\n\nexport default forwardRef(Board);","// Marching Squares Edge Detection\n// this is a \"marching ants\" algorithm used to calc the outline path// d3-plugin for calculating outline paths\n// License: https://github.com/d3/d3-plugins/blob/master/LICENSE\n//\n// Copyright (c) 2012-2014, Michael Bostock\n// All rights reserved.\n//\n//  Redistribution and use in source and binary forms, with or without\n//  modification, are permitted provided that the following conditions are met:\n//* Redistributions of source code must retain the above copyright notice, this\n//  list of conditions and the following disclaimer.\n//* Redistributions in binary form must reproduce the above copyright notice,\n//  this list of conditions and the following disclaimer in the documentation\n//  and/or other materials provided with the distribution.\n//* The name Michael Bostock may not be used to endorse or promote products\n//  derived from this software without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MICHAEL BOSTOCK BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. \n\n// lookup tables for marching directions \nvar d3_geom_contourDx = [1, 0, 1, 1, -1, 0, -1, 1, 0, 0, 0, 0, -1, 0, -1, NaN],\n    d3_geom_contourDy = [0, -1, 0, 0, 0, -1, 0, 0, 1, -1, 1, 1, 0, -1, 0, NaN];\n\nexport interface GridDetect {\n    (x: number, y: number): boolean;\n}\n\nfunction d3_geom_contourStart(grid: GridDetect): [number, number] {\n    var x = 0,\n        y = 0;\n\n    // search for a starting point; begin at origin \n    // and proceed along outward-expanding diagonals \n    while (true) {\n        if (grid(x, y)) {\n            return [x, y];\n        }\n        if (x === 0) {\n            x = y + 1;\n            y = 0;\n        } else {\n            x = x - 1;\n            y = y + 1;\n        }\n    }\n}\n\nexport interface Point \n{\n    x: number,\n    y: number\n}\n\nexport function contour(grid: GridDetect, start: [number, number] | null = null) : Point[] {\n\n    var s = start || d3_geom_contourStart(grid), // starting point \n        c: Point[] = [],    // contour polygon \n        x = s[0],  // current x position \n        y = s[1],  // current y position \n        dx = 0,    // next x direction \n        dy = 0,    // next y direction \n        pdx = NaN, // previous x direction \n        pdy = NaN, // previous y direction \n        i = 0;\n\n    do {\n        // determine marching squares index \n        i = 0;\n        if (grid(x - 1, y - 1)) i += 1;\n        if (grid(x, y - 1)) i += 2;\n        if (grid(x - 1, y)) i += 4;\n        if (grid(x, y)) i += 8;\n\n        // determine next direction \n        if (i === 6) {\n            dx = pdy === -1 ? -1 : 1;\n            dy = 0;\n        } else if (i === 9) {\n            dx = 0;\n            dy = pdx === 1 ? -1 : 1;\n        } else {\n            dx = d3_geom_contourDx[i];\n            dy = d3_geom_contourDy[i];\n        }\n\n        // update contour polygon \n        if (dx !== pdx && dy !== pdy) {\n            c.push({ x, y });\n            pdx = dx;\n            pdy = dy;\n        }\n\n        x += dx;\n        y += dy;\n    } while (s[0] !== x || s[1] !== y);\n\n    return c;\n};\n","import { GridDetect, contour, Point } from \"./MarchingSquares\";\n\n\nconst cachedImageData: { [id: string]: ImageData } = {};\n\nconst addToCache = <K extends keyof typeof cachedImageData>(key: K, value: ImageData) => {\n    cachedImageData[key] = value;\n}\n\nexport interface ImageData \n{\n    height: number,\n    dataUrl: string,\n    width: number,\n    boundingPoints: Point[]\n}\n\nexport const getImageData = async (imageUrl: string, workingCanvas: HTMLCanvasElement) : Promise<ImageData> =>\n{\n    const cachedData = cachedImageData[imageUrl];\n\n    if (cachedData)\n    {\n        return cachedData;\n    }\n\n    let loadPromise = new Promise<HTMLImageElement>((resolve, reject) => {        \n        const imageElement = new Image();\n        imageElement.crossOrigin = \"anonymous\";\n        imageElement.onload = ev => {\n            resolve(imageElement);\n        };\n        imageElement.onerror = ev => {\n            reject(`Could not load image from ${imageUrl}.`);\n        }\n        imageElement.src = imageUrl;\n    });\n\n    const loadedImage = await loadPromise;\n\n    // First off, resize the canvas.\n    const canvasWidth = workingCanvas.width = loadedImage.width;\n    const canvasHeight = workingCanvas.height = loadedImage.height;\n\n    const drawContext = workingCanvas.getContext(\"2d\")!;\n\n    drawContext.clearRect(0, 0, workingCanvas.width, workingCanvas.height);\n\n    drawContext.drawImage(loadedImage, 0 ,0);\n\n    const pixelData = drawContext.getImageData(0, 0, workingCanvas.width, workingCanvas.height)\n                                 .data;\n   \n    // This is used by the marching ants algorithm\n    // to determine the outline of the non-transparent\n    // pixels on the image\n    const defineNonTransparent: GridDetect = function (x, y)\n    {\n        var a=pixelData[(y*canvasWidth+x)*4+3];\n        return(a>99);\n    }\n\n    var points = contour(defineNonTransparent);\n\n    var data: ImageData = {\n        width: canvasWidth,\n        height: canvasHeight,\n        boundingPoints: points,\n        dataUrl: workingCanvas.toDataURL()\n    };\n    \n    addToCache(imageUrl, data);\n\n    return data;\n}\n\nexport const getClipPath = (imgData: ImageData) : string => \n{\n    let clipPathSet : string[] = [];\n\n    imgData.boundingPoints.forEach(p => clipPathSet.push(`${p.x}px ${p.y}px`));\n\n    return clipPathSet.join(',');\n};\n\nexport const getBoundingPolygonPath = (imgData: ImageData) : string => \n{\n    let polygonPathSet : string[] = [];\n\n    imgData.boundingPoints.forEach(p => polygonPathSet.push(`${p.x},${p.y}`));\n\n    return polygonPathSet.join(' ');\n};","import { FunctionComponent, useState, useEffect, useRef } from \"react\";\nimport React from 'react';\nimport Draggable, { DraggableData } from 'react-draggable';\nimport { getImageData, getClipPath, getBoundingPolygonPath } from \"../ImageProcessing\";\nimport { ImageState, ImageInitData, BoundingRect } from \"../CommonTypes\";\nimport { createUseStyles } from 'react-jss';\nimport Flatten from '@flatten-js/core';\n\nconst useStyles = createUseStyles({\n    \n    container: {\n        display: 'inline-block',\n        position: 'absolute',\n        cursor: 'pointer'\n    },\n\n    svgEntity: {\n        left: 0,\n        top: 0\n    }\n});\n\nexport interface ImageProps {\n    url: string,\n    initialX?: number,\n    initialY?: number,\n    rotate?: number,\n    glued: boolean,\n    canvas: HTMLCanvasElement,\n    onInitialStateAvailable?: (img: ImageState) => void,\n    onMovingStart?: (img: ImageState) => void,\n    onMovingEnd?: (img: ImageState) => void,\n    onMove?: (img: ImageState) => void,\n    onMouseEnter?: (img: ImageState) => void,\n    onMouseLeave?: (img: ImageState) => void,\n    onSelect?: (img: ImageState) => void,\n    dragScale?: number\n}\n\nconst Image : FunctionComponent<ImageProps> = ({\n     url, \n     canvas, \n     initialX = 0, initialY = 0, rotate = 0,\n     glued,\n     onInitialStateAvailable,\n     onMovingStart, onMovingEnd, onMove, \n     onMouseEnter, onMouseLeave, \n     onSelect,\n     dragScale = 1 }) => {\n\n    const classes = useStyles();\n    const [ svgProps, setSvgProps ] = useState({ width: 0, height: 0, style: {} } as React.SVGAttributes<HTMLOrSVGElement>);\n    const [ imgProps, setImgProps ] = useState({ width: 0, height: 0, href: \"\" } as React.SVGAttributes<SVGImageElement>);\n    const [ clipPath, setClipPath] = useState(\"\");\n    const imageInitData = useRef(null as ImageInitData | null);\n    const lastKnownPosition = useRef({ left: initialX, right: 0, top: initialY, bottom: 0 });\n    const lastKnownIntersectionPolygon = useRef(new Flatten.Polygon());\n    \n    useEffect(() => {\n        \n        const load = async () => {\n            const imageData = await getImageData(url, canvas)\n        \n            // Generate clip path.\n            const clipPath = getClipPath(imageData);\n    \n            // Adjust the SVG size.\n            setSvgProps({\n                 width: imageData.width, \n                 height: imageData.height\n            });\n\n            setImgProps({\n                width: imageData.width,\n                height: imageData.height,\n                href: imageData.dataUrl,\n            });\n\n            setClipPath(`polygon(${clipPath})`);\n\n            imageInitData.current = {\n                url,\n                imageSize: { width: imageData.width, height: imageData.height },                \n                rawPolygon: new Flatten.Polygon(imageData.boundingPoints.map(v => Flatten.point(v.x, v.y))),\n                borderPoints: getBoundingPolygonPath(imageData)\n            };\n\n            lastKnownIntersectionPolygon.current = computeTransformedPolygon(imageInitData.current.rawPolygon, lastKnownPosition.current, rotate);\n\n            onInitialStateAvailable?.({\n                ...imageInitData.current!,\n                inUse: true,\n                rotate: rotate,\n                boundingRect: lastKnownPosition.current,\n                transformedPolygon: lastKnownIntersectionPolygon.current\n            });\n        }\n\n        load();\n    // I want to capture rotate on load, and the overhead of storing initial and current rotate isn't worth it.\n    // eslint-disable-next-line\n    }, [url, canvas, onInitialStateAvailable]);\n\n    const getStateData = (dragData: DraggableData, updatePolygon: boolean) : ImageState =>\n    {\n        const size = imageInitData.current!.imageSize;\n        const boundingRect = { left: initialX + dragData.x, top: initialY + dragData.y, right: initialX + dragData.x + size.width, bottom: initialY + dragData.y + size.height };\n\n        let transformedPolygon = lastKnownIntersectionPolygon.current;\n        \n        if (updatePolygon)\n        {\n            transformedPolygon = computeTransformedPolygon(\n                                    imageInitData.current!.rawPolygon, \n                                    boundingRect,\n                                    rotate)\n        }\n\n        return {\n            ...imageInitData.current!,\n            inUse: true,\n            rotate: rotate,\n            boundingRect: boundingRect,            \n            transformedPolygon: transformedPolygon\n        }\n    }\n\n    const moveStartHandler = (dragData: DraggableData) => {\n\n        if (glued)\n        {\n            return false;\n        }\n\n        onMovingStart?.(getStateData(dragData, false));\n    }\n\n    const moveHandler = (dragData: DraggableData) => {\n        onMove?.(getStateData(dragData, false));\n    }    \n\n    const moveEndHandler = (dragData: DraggableData) => {\n\n        var state = getStateData(dragData, true);\n\n        onMovingEnd?.(state);\n\n        // Store the last known position and transform poly\n        lastKnownPosition.current = state.boundingRect;\n        lastKnownIntersectionPolygon.current = state.transformedPolygon;\n    }\n\n    const computeTransformedPolygon = (rawPolygon: Flatten.Polygon, boundingRect: BoundingRect, rotate: number) =>\n    {    \n        let angle = rotate * Math.PI/180.;\n\n        let center = rawPolygon.box.center;\n\n        // First rotate around the center; then translate.\n        let matrix = new Flatten.Matrix()        \n                            .translate(boundingRect.left, boundingRect.top)\n                            .translate(center.x, center.y)\n                            .rotate(angle)\n                            .translate(-center.x, -center.y);\n\n        return rawPolygon.transform(matrix);\n    }\n\n    const enterHandler = () => {\n        onMouseEnter?.({\n            ...imageInitData.current!,\n            inUse: true,\n            rotate: rotate,\n            boundingRect: lastKnownPosition.current,\n            transformedPolygon: lastKnownIntersectionPolygon.current\n        });\n    }\n\n    const leaveHandler = () => {\n        onMouseLeave?.({\n            ...imageInitData.current!,\n            inUse: true,\n            rotate: rotate,\n            boundingRect: lastKnownPosition.current,\n            transformedPolygon: lastKnownIntersectionPolygon.current\n        });\n    }\n\n    const selectedHandler = () => {\n        onSelect?.({            \n            ...imageInitData.current!,\n            inUse: true,\n            rotate: rotate,\n            boundingRect: lastKnownPosition.current,\n            transformedPolygon: lastKnownIntersectionPolygon.current\n        })\n    }    \n\n    return <Draggable \n                scale={dragScale} \n                positionOffset={{x: initialX, y: initialY}}                \n                onStart={(_, data) => moveStartHandler(data)}\n                onStop={(_, data) => moveEndHandler(data)} \n                onDrag={(_, data) => moveHandler(data)}\n                onMouseDown={selectedHandler}>\n                <div>\n                    <div style={{ clipPath: clipPath, transform: `rotate(${rotate}deg)` }} \n                        className={classes.container} \n                        onMouseEnter={() => enterHandler()} \n                        onMouseLeave={() => leaveHandler()}>\n                        <svg className={classes.svgEntity} {...svgProps}>        \n                            <image {...imgProps} />\n                        </svg>\n                    </div>\n                </div>\n    </Draggable>;\n};\n\nexport default React.memo(Image);","export interface WorkshopDetails\n{\n    name: string,\n    images: string[]\n}\n\nexport const loadWorkshop = async (folderUrl: string): Promise<WorkshopDetails> => \n{\n    // From the folder URL, get the workshop.json file.\n    const workshopDataUrl = new URL(\"workshop.json\", folderUrl).href;\n\n    try \n    {\n        const request = await fetch(workshopDataUrl, {\n            method: 'GET',\n            mode: 'no-cors'\n        });\n\n        if (request.ok)\n        {\n            const jsonData = (await request.json()) as WorkshopDetails;\n\n            if (!jsonData || !jsonData.name || !(jsonData.images instanceof Array))\n            {\n                throw new Error(\"Workshop data is not correctly formatted.\");\n            }\n\n            // We have some workshop data.\n            // Expand the image URLs.\n            jsonData.images = jsonData.images.map(v => new URL(v, folderUrl).href); \n\n            return jsonData;\n        }\n        \n        throw new Error(`Could not load workshop. Response from server: ${request.status} ${request.statusText}`);\n    } \n    catch (e)\n    {\n        // Could not load workshop.\n        throw new Error(`Could not load workshop; ${e}`);\n    }\n};","import React, { FunctionComponent } from 'react';\nimport { ImageState } from '../CommonTypes';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Theme } from '@material-ui/core/styles';\n\ninterface SelectionPolygonProps { img: ImageState, color: 'primary' | 'secondary' }\n\nconst useStyles = makeStyles(({ palette } : Theme) => ({\n  selectionBorderSvg: {\n    position: 'absolute',\n    pointerEvents: 'none'   \n  },\n  selectionBorderPolygon: {\n    fill: 'none',\n    strokeWidth: '3px',\n    strokeLinejoin: 'round',\n    stroke: ({ color } : SelectionPolygonProps) => color === 'primary' ? palette.primary.main : palette.primary.light\n  },\n}));\n\nconst SelectionPolygon : FunctionComponent<SelectionPolygonProps> = ({ img, color }) =>\n{\n    const classes = useStyles({ img, color });\n\n    return <svg className={classes.selectionBorderSvg} width={img.imageSize.width} height={img.imageSize.height} style={{\n        left: img.boundingRect.left,\n        top: img.boundingRect.top,\n        transform: `rotate(${img.rotate}deg)`\n    }}>\n        <polygon className={classes.selectionBorderPolygon} points={img.borderPoints}></polygon>\n    </svg>;\n}\n\nexport default SelectionPolygon;\n","import React, { FunctionComponent } from 'react';\nimport { ImageState } from '../CommonTypes';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectionPolygon from './SelectionPolygon';\n\nconst useStyles = makeStyles(() => ({\n  selectionLayer: {\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    height: '100%',\n    width: '100%',\n    pointerEvents: 'none'\n  }\n}));\n\nconst SelectionLayer : FunctionComponent<{ hoverImage: ImageState | null, selectedImage: ImageState | null }> = ({ hoverImage, selectedImage }) =>\n{\n    const classes = useStyles();\n\n    const selectionPolygon = selectedImage ? <SelectionPolygon color=\"primary\" img={selectedImage} /> : null;\n\n    const hoverPolygon = hoverImage && hoverImage.url !== selectedImage?.url ? <SelectionPolygon color=\"secondary\" img={hoverImage} /> : null;\n\n    return <div className={classes.selectionLayer}>\n        {selectionPolygon}\n        {hoverPolygon}\n    </div>;\n}\n\nexport default SelectionLayer;","import React, { FunctionComponent, useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst modalRoot = document.getElementById(\"modalRoot\");\n\nconst useStyles = makeStyles(() => ({\n  colorPickerContainer: {\n    display: \"inline-block\",\n    position: \"absolute\",\n    bottom: \"70px\",\n    left: \"65px\"\n  },  \n  \n  '@media (min-width: 600px)': {\n    colorPickerContainer: {\n        left: \"165px\"\n      },  \n    }\n}));\n\nconst FloatingColorPicker : FunctionComponent<{ display: boolean, initialColor?: string, onColorChange?: (color: string) => void }> = (\n    { display, initialColor, onColorChange }) =>\n{\n    const classes = useStyles();\n    \n    const [el] = useState(() => {\n        let element = document.createElement('div');\n        element.classList.add(classes.colorPickerContainer);\n        return element;\n    });\n\n    const [currentColor, setCurrentColor] = useState(initialColor);\n\n    useEffect(() => \n    {\n        modalRoot?.appendChild(el);\n\n        return () => { modalRoot?.removeChild(el); };\n\n    }, [el]);\n\n    const handleColorChange = (color: ColorResult) => {\n        setCurrentColor(color.hex);\n        onColorChange?.(color.hex);        \n    };\n    \n    if (display)\n    {\n        let picker = <ChromePicker disableAlpha={true} color={currentColor} onChange={handleColorChange} />\n\n        return createPortal(picker, el);\n    }\n    \n    return <React.Fragment></React.Fragment>;\n}\n\nexport default FloatingColorPicker;","import React, { FunctionComponent, useState, useEffect } from 'react';\nimport { ImageState, AvailableWorkshopImage } from './CommonTypes';\nimport FloatingColorPicker from './Components/FloatingColorPicker';\nimport { AppBar, Toolbar, Typography, IconButton, CssBaseline, Divider, GridList, GridListTile, SwipeableDrawer, Theme, Box, GridListTileBar, Slide, Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, Button } from '@material-ui/core';\nimport ArrowUpwardRoundedIcon from '@material-ui/icons/ArrowUpwardRounded';\nimport ArrowDownwardRoundedIcon from '@material-ui/icons/ArrowDownwardRounded';\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\nimport CropFreeRoundedIcon from '@material-ui/icons/CropFreeRounded'\nimport AddBox from '@material-ui/icons/AddBox';\nimport PaletteIcon from '@material-ui/icons/Palette';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport DeleteSweepIcon from '@material-ui/icons/DeleteSweep';\n/* import PlayForWorkIcon from '@material-ui/icons/PlayForWork'; */\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery'; \n\nconst useStyles = makeStyles(({ palette }: Theme) => ({\n\n    bar: {\n        top: 'auto;',\n        bottom: 0,\n        boxShadow: \"0px -4px 5px 0px rgba(0, 0, 0, 0.21)\",\n        overflow: 'hidden'\n    },\n\n    barSpreadButton: {\n        marginRight: '15px'\n    },\n\n    barSpreadButtonWide: {\n        marginRight: '35px'\n    },\n    \n    barToggleButton: {\n        marginRight: '15px',\n    },\n\n    barToggleButtonEnabled: {\n        opacity: '50%'\n    },\n\n    barTitle: {\n        paddingRight: '0px',\n        marginLeft: '3px',\n        paddingLeft: '3em',\n        background: \"url('/logo192.png')\",\n        backgroundSize: \"contain\",\n        backgroundRepeat: \"no-repeat\"\n    },\n\n    barTitleLarge: {\n        paddingRight: '10px',\n        paddingLeft: '5em',\n        background: \"url('/logo192.png')\",\n        backgroundSize: \"contain\",\n        backgroundRepeat: \"no-repeat\"\n    },\n\n    divider: {\n        marginLeft: '10px',\n    },\n\n    buttonContainer: {\n        marginLeft: '10px'\n    },\n\n    boxGrid: {\n        height: '600px',\n    },\n\n    boxImage: {\n        //height: '200px'\n    },\n    \n    grow: {\n        flexGrow: 1\n    },\n\n    swappableSection: {\n        position: 'relative',\n        alignSelf: 'stretch',\n        alignItems: 'center',\n        display: 'flex',\n        flexGrow: 1\n    },\n\n    swappableSet: {\n        position: 'absolute',\n        left: 0\n    },\n\n    imgBoundingBox: {\n        backgroundSize: 'contain',\n        backgroundRepeat: 'no-repeat',        \n        backgroundPosition: 'center',\n        height: '100%',\n        width: '100%',\n        boxSizing: 'border-box',\n        borderColor: 'transparent',\n        cursor: 'pointer',\n\n        '&:active': {\n            borderColor: palette.primary.main,\n         },\n        '&:focus': {\n            borderColor: palette.primary.main,\n        },\n        '&:hover': {\n            borderColor: palette.primary.main,\n        }\n    },\n\n    imgTileBar: {\n        background: 'none',\n        padding: '5px',\n        boxSizing: 'content-box'\n    },\n\n    imgActionUsePhoto: {\n        background: 'linear-gradient(to bottom, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 100%)',\n        color: 'white'\n    },\n\n    boxDrawer: {\n        width: '100%',\n        height: '100%',\n        left: 0,\n        top: 0,\n        padding: '10px',\n        userSelect: 'none'\n    }\n}));\n\nconst OptionBar: FunctionComponent<{ \n    activeImage?: ImageState | null,\n    workshopName?: string,\n    boardBackgroundColor?: string\n    allImages: AvailableWorkshopImage[],\n    onZoomToFit?: () => void,\n    onUpOne?: () => void,\n    onDownOne?: () => void,\n    onRemoveImage?: () => void,\n    onUseImage?: (url : string) => void,\n    onBackgroundColorChange?: (color: string) => void,\n    onDeleteAll?: () => void,\n    onHeadingClicked?: () => void\n}> = ({ \n    activeImage, workshopName, boardBackgroundColor, allImages, \n    onZoomToFit, onUpOne, onDownOne, onRemoveImage, onUseImage, onBackgroundColorChange, onDeleteAll, onHeadingClicked }) => {\n\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n  const [deleteAllDialogOpen, setDeleteAllDialogOpen] = useState(false);\n  const theme = useTheme();\n  const isBig = useMediaQuery(theme.breakpoints.up(\"sm\"));\n  const [displayColorPicker, setDisplayColorPicker] = useState(false); \n\n  const toggleDrawer = (open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent,\n  ) => {\n    if (event &&\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n\n    if (open)\n    {\n        setDisplayColorPicker(false);\n        window.history.pushState({ imageDrawer: true }, \"Add Image\");\n    }\n    else if (window.history.state?.imageDrawer) \n    {\n        // Go back to the state before we opened the drawer.\n        window.history.back();\n    }\n\n    setDrawerOpen(open);\n  };\n\n  useEffect(() => \n  {\n    window.onpopstate = (ev: PopStateEvent) => {\n        \n        if (drawerOpen)\n        {\n            // Close the drawer.\n            setDrawerOpen(false);            \n            ev.preventDefault();\n        }\n        else if (displayColorPicker)\n        {\n            setDisplayColorPicker(false);            \n            ev.preventDefault();\n        }        \n    };\n\n    return () => { window.onpopstate = null };\n    \n  }, [drawerOpen, displayColorPicker]);\n  \n  useEffect(() => {\n\n    if (activeImage !== null)\n    {\n        setDisplayColorPicker(false);\n    }\n\n  }, [activeImage]);\n\n  const setImageStateAndCloseDrawer = (url: string) => {\n    onUseImage?.(url);\n    setDrawerOpen(false);\n  }\n\n  const toggleDisplayColorPicker = () => {\n\n    if (displayColorPicker)\n    {\n        if (window.history.state?.colorPicker) \n        {\n            // Go back to the state before we opened the drawer.\n            window.history.back();\n        }\n\n        setDisplayColorPicker(false);\n    }\n    else \n    {\n        window.history.pushState({ colorPicker: true }, \"Choose Color\");\n\n        setDisplayColorPicker(true);\n    }\n\n  };\n\n  const handleDeleteDialogClose = (confirmed: boolean) => {\n    \n    setDeleteAllDialogOpen(false);\n\n    if (confirmed)\n    {\n        onDeleteAll?.();\n    }\n\n  }\n\n  let heading: React.ReactNode;\n\n  if (workshopName)\n  {\n    if (isBig)\n    {\n        heading = <React.Fragment>\n            <Typography variant=\"h6\">{workshopName}</Typography>\n            <Typography variant=\"subtitle2\">CollageIT</Typography>\n        </React.Fragment>;        \n    }\n    else \n    {\n        heading = <Typography variant=\"h6\">&nbsp;</Typography>;\n    }\n  }\n  else\n  {\n    heading = <Typography variant=\"h6\">&nbsp;</Typography>;\n  }\n\nreturn <React.Fragment>\n        <CssBaseline />\n        <AppBar className={classes.bar} color=\"primary\" elevation={16} position=\"fixed\">\n            <Toolbar>\n                <div className={isBig ? classes.barTitleLarge : classes.barTitle} onClick={onHeadingClicked}>\n                    {heading}\n                </div>\n                <Divider className={classes.divider} orientation=\"vertical\" flexItem />               \n                <div className={classes.swappableSection}>\n                    <div className={classes.swappableSet}>\n                        <Slide direction=\"up\" in={activeImage !== null} mountOnEnter unmountOnExit>\n                            <div>\n                                {/* <IconButton edge=\"end\" color=\"inherit\">\n                                    <PlayForWorkIcon />\n                                </IconButton> */}\n                                <IconButton className={classes.barSpreadButtonWide} edge=\"end\" color=\"inherit\" onClick={onUpOne} title=\"Move Image Up\">\n                                    <ArrowUpwardRoundedIcon />\n                                </IconButton>\n                                <IconButton className={classes.barSpreadButtonWide} edge=\"end\" color=\"inherit\" onClick={onDownOne} title=\"Move Image Down\">\n                                    <ArrowDownwardRoundedIcon />\n                                </IconButton>                                \n                                <IconButton className={classes.barSpreadButtonWide} edge=\"end\" color=\"inherit\" onClick={onRemoveImage} title=\"Remove Image\">\n                                    <DeleteIcon />\n                                </IconButton>\n                            </div>\n                        </Slide>\n                    </div>\n                    <div className={classes.swappableSet}>\n                        <Slide direction=\"down\" in={activeImage === null} mountOnEnter unmountOnExit>\n                            <div>\n                                <IconButton className={classes.barSpreadButton} edge=\"end\" color=\"inherit\" onClick={toggleDrawer(true)} title=\"Add New Image\">\n                                    <AddBox />\n                                </IconButton>\n                                <IconButton className={`${classes.barToggleButton} ${displayColorPicker ? classes.barToggleButtonEnabled : null}`} edge=\"end\" color=\"inherit\" onClick={toggleDisplayColorPicker} title=\"Change Background Colour\">\n                                    <PaletteIcon />\n                                </IconButton>\n                                <IconButton className={classes.barSpreadButton} edge=\"end\" color=\"inherit\" onClick={onZoomToFit} title=\"Zoom To Fit\">\n                                    <CropFreeRoundedIcon />\n                                </IconButton>\n                                <IconButton className={classes.barSpreadButton} edge=\"end\" color=\"inherit\" onClick={() => setDeleteAllDialogOpen(true)} title=\"Remove All Images\">\n                                    <DeleteSweepIcon />\n                                </IconButton>\n                            </div>\n                        </Slide>\n                    </div>\n                </div>\n            </Toolbar>\n        </AppBar>        \n        <SwipeableDrawer open={drawerOpen}  anchor=\"bottom\" onOpen={toggleDrawer(true)} onClose={toggleDrawer(false)}>\n            <AppBar position=\"static\" color=\"primary\" onClick={toggleDrawer(false)}>\n                <Toolbar><Typography variant=\"h4\"><AddBox /> Box</Typography></Toolbar>\n            </AppBar>\n            <div className={classes.boxDrawer}>\n                <GridList className={classes.boxGrid} cellHeight={160} cols={isBig ? 6 : 2} spacing={10}>\n                    {allImages.filter(img => !img.inUse).map(img => (\n                            <GridListTile key={img.url} cols={1}>\n                                <Box className={classes.imgBoundingBox} style={{backgroundImage: `url(${img.url})`}} border={2} onDoubleClick={() => setImageStateAndCloseDrawer(img.url)}>                                    \n                                    <GridListTileBar\n                                    titlePosition=\"top\"\n                                    actionIcon={\n                                        <IconButton aria-label=\"use image\" className={classes.imgActionUsePhoto} onClick={() => setImageStateAndCloseDrawer(img.url)}>\n                                            <AddPhotoAlternateIcon />\n                                        </IconButton>\n                                    }\n                                    actionPosition=\"right\"\n                                    className={classes.imgTileBar}\n                                    />\n                                </Box>                                \n                            </GridListTile>\n                    ))}\n                </GridList>\n            </div>\n        </SwipeableDrawer>\n        <Dialog open={deleteAllDialogOpen} onClose={() => handleDeleteDialogClose(false)}>\n          <DialogTitle>Delete All Images?</DialogTitle>\n          <DialogContent>\n              <DialogContentText>\n                  This will remove all your images from the collage and start again. Are you sure?\n              </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={() => handleDeleteDialogClose(false)} color=\"primary\" autoFocus>\n                No, I'm still using them!\n            </Button>\n            <Button onClick={() => handleDeleteDialogClose(true)} color=\"primary\">\n                Yep, I'm sure, remove my images.\n            </Button>\n          </DialogActions>\n        </Dialog>\n        <FloatingColorPicker display={displayColorPicker} initialColor={boardBackgroundColor} onColorChange={onBackgroundColorChange}></FloatingColorPicker>\n        \n  </React.Fragment> ;\n\n};\n\nexport default React.memo(OptionBar);\n","import React, { FunctionComponent, SVGProps } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Theme } from '@material-ui/core/styles';\nimport LoopIcon from '@material-ui/icons/Loop';\n\ninterface SelectionRotatorProps extends SVGProps<SVGSVGElement> {\n  center: { x: number, y: number }\n}\n\nconst useStyles = makeStyles(({ palette } : Theme) => ({\n\n  rotator: {\n    position: 'absolute',\n    cursor: 'grab',\n    pointerEvents: 'all',\n    touchAction: 'none',\n    filter: \"contrast(0.5)\"\n  },\n\n}));\n\nconst SelectionRotator : FunctionComponent<SelectionRotatorProps> = (props) =>\n{\n    const { center } = props;\n    const classes = useStyles();\n\n    return <svg className={classes.rotator} width={50} height={50} style={{\n        left: center.x - 25,\n        top: center.y - 25\n    }} {...props}>\n        <LoopIcon />\n    </svg>;\n}\n\nexport default SelectionRotator;\n","import React, { FunctionComponent, useState, useRef, MouseEventHandler, TouchEventHandler } from 'react';\nimport { ImageState } from '../CommonTypes';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport SelectionRotator from './SelectionRotator';\nimport { Transform } from 'panzoom';\nimport Flatten from '@flatten-js/core';\n\ninterface InteractionLayerProps \n{\n  selectedImage: ImageState | null,\n  currentBoardTransform: Transform,\n  onRotationChanged: (image: ImageState, rotateDegs: number) => void,\n  onRotationEnded: (image: ImageState, rotateDegs: number) => void\n}\n\ninterface StyleProps \n{\n  isRotateActive: boolean\n}\n\nconst useStyles = makeStyles<Theme, StyleProps>(() => ({\n  overlayLayer: props => ({\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    height: '100%',\n    width: '100%',\n    pointerEvents: props.isRotateActive ? 'auto' : 'none',\n    cursor: props.isRotateActive ? 'grabbing' : 'cursor',    \n    touchAction: 'none'\n  }),\n}));\n\nconst InteractionLayer : FunctionComponent<InteractionLayerProps> = ({ selectedImage, currentBoardTransform, onRotationChanged, onRotationEnded }) =>\n{\n    const [isRotateActive, setRotateActive] = useState(false);    \n    const startRotateDegrees = useRef(0);\n    const lastRotateDegrees = useRef(0);\n    const [touchId, setTouchId] = useState(-1);\n    const classes = useStyles({ isRotateActive });\n\n    let rotator: React.ReactNode;\n    let mouseMove : MouseEventHandler<HTMLDivElement> | undefined;\n    let touchMove : TouchEventHandler<HTMLDivElement> | undefined;\n    let interactionEnd : MouseEventHandler<HTMLDivElement> | undefined;\n    let touchEnd : TouchEventHandler<HTMLDivElement> | undefined;\n    \n    if (selectedImage)\n    {\n      var offsetBox = new Flatten.Box(\n        selectedImage.boundingRect.left, \n        selectedImage.boundingRect.top,\n        selectedImage.boundingRect.right,\n        selectedImage.boundingRect.bottom);\n\n      var point = Flatten.point(selectedImage.boundingRect.left + (selectedImage.imageSize.width / 2), selectedImage.boundingRect.top - 100);\n      \n      let radsAngle = selectedImage.rotate * Math.PI/180.;\n\n      let rotatedPoint = point.rotate(radsAngle, offsetBox.center);\n\n      var xOffset = currentBoardTransform.x + (rotatedPoint.x * currentBoardTransform.scale);\n      var yOffset = currentBoardTransform.y + (rotatedPoint.y * currentBoardTransform.scale);\n      \n      var offsetCenter = { \n        x: currentBoardTransform.x + (offsetBox.center.x * currentBoardTransform.scale), \n        y: currentBoardTransform.y + (offsetBox.center.y * currentBoardTransform.scale)\n      };\n\n      const getDegrees = (x: number, y: number) => {        \n        \n        const radians\t= Math.atan2(x - offsetCenter.x, y - offsetCenter.y);\n        const degrees\t= Math.round((radians * (180 / Math.PI) * -1) + 100);\n\n        return degrees;\n      }\n  \n      rotator = <SelectionRotator center={{ x: xOffset, y: yOffset }} onMouseDown={(ev) => {\n        \n        startRotateDegrees.current = getDegrees(ev.pageX, ev.pageY) - selectedImage.rotate;\n        lastRotateDegrees.current = 0;\n        setRotateActive(true);\n\n      }} onTouchStart={(ev) => {\n        \n        if (touchId === -1)\n        {\n          setTouchId(ev.changedTouches[0].identifier);\n          startRotateDegrees.current = getDegrees(ev.changedTouches[0].pageX, ev.changedTouches[0].pageY) - selectedImage.rotate;\n          lastRotateDegrees.current = 0;\n          setRotateActive(true);\n        }\n\n      }} />\n\n      if (isRotateActive)\n      {\n        // Add a mousemove handler.\n        mouseMove = (ev) => {\n                    \n          // Calculate the mouse move position, removing starting point\n          const degrees = getDegrees(ev.pageX, ev.pageY) - startRotateDegrees.current;\n          \n          lastRotateDegrees.current = degrees;\n          onRotationChanged(selectedImage, degrees);\n        }\n\n        touchMove = (ev) => {\n          \n          var changedTouchId = ev.changedTouches[0].identifier;\n\n          if (changedTouchId === touchId)\n          {\n            var touch = ev.changedTouches[0];\n            // Calculate the mouse move position, removing starting point\n            const degrees = getDegrees(touch.pageX, touch.pageY) - startRotateDegrees.current;\n            \n            lastRotateDegrees.current = degrees;\n            onRotationChanged(selectedImage, degrees);\n\n            ev.preventDefault();\n          }\n        }\n        \n        interactionEnd = () => \n        {\n            onRotationEnded(selectedImage, lastRotateDegrees.current);\n  \n            setRotateActive(false);\n        };\n\n        touchEnd = ev => {\n          \n          var changedTouchId = ev.changedTouches[0].identifier;\n\n          if (changedTouchId === touchId)\n          {\n            onRotationEnded(selectedImage, lastRotateDegrees.current);\n  \n            setRotateActive(false);\n            setTouchId(-1);\n          }\n        };\n      }\n    }\n\n    return <div className={classes.overlayLayer} \n                onMouseUp={interactionEnd} \n                onTouchEnd={touchEnd} \n                onMouseLeave={interactionEnd} \n                onTouchMove={touchMove} \n                onMouseMove={mouseMove}>\n      {rotator}\n    </div>;\n}\n\nexport default InteractionLayer;","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Board, { BoardMethods } from './Components/Board';\nimport Image from './Components/Image';\nimport { ImageState, AvailableWorkshopImage, SavedWorkshopState } from './CommonTypes';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { loadWorkshop } from './WorkshopLoader';\nimport SelectionLayer from './Components/SelectionLayer';\nimport OptionBar from './OptionBar';\nimport InteractionLayer from './Components/InteractionLayer';\nimport { Transform } from 'panzoom';\nimport Flatten from '@flatten-js/core';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#FF66B2',\n      light: '#FF007F'\n    }\n  }\n})\n\nconst useStyles = makeStyles(theme => ({\n  computeCanvas: {\n    visibility: 'hidden',\n    position: 'fixed',\n    left: -9999\n  },\n  selectionLayer: {\n    position: \"fixed\",\n    left: 0,\n    top: 0,\n    height: '100%',\n    width: '100%',\n    pointerEvents: 'none'\n  }\n}));\n\nfunction App() {\n\n  let workshop = \"default\";\n\n  if (window.location.hash)\n  {\n    workshop = window.location.hash.substring(1) || \"default\";\n  }\n\n  const classes = useStyles();\n  const processingCanvasEl = useRef<HTMLCanvasElement>(null);\n  const boardMethods = useRef<BoardMethods>(null);\n  const cachedImageStates = useRef<(ImageState | null)[]>();\n  const [workshopName, setWorkshopName] = useState(\"\");\n  const [backgroundColor, setBackgroundColor] = useState(\"#ffffff\");\n  const [workshopImages, setWorkshopImages] = useState<AvailableWorkshopImage[]>([]);\n  const [orderedImages, setOrderedImages] = useState<AvailableWorkshopImage[]>([]);\n  const [workshopUrl] = useState(new URL(workshop + \"/\", window.location.href).href);\n  const [boardMotionActive, setBoardMotionActive] = useState(true);\n  const [hoverImageData, setHoverImageData] = useState<ImageState | null>(null);\n  const [selectedImageData, setSelectedImageData] = useState<ImageState | null>(null);\n  const [movingImageData, setMovingImageData] = useState<ImageState | null>(null);\n  const [interactionTransform, setInteractionTransform] = useState<Transform>({ x: 0, y: 0, scale: 1.0 });\n\n  const zoomToFit = () => {\n\n    var cachedImages = cachedImageStates.current;\n\n    let currentBox: Flatten.Box | null = null;\n    let isFirst = true;\n\n    for (let img of cachedImages || [])\n    {\n      // Consider the image if it's in use, and it has been loaded.\n      if (img?.inUse && img.borderPoints)\n      {\n        let thisBox = img?.transformedPolygon.box;\n        if (isFirst)\n        {\n          currentBox = thisBox;\n          isFirst = false;\n        }\n        else \n        {\n          let cloned: Flatten.Box = currentBox!.clone();\n\n          if (thisBox.xmin < cloned.xmin)\n          {\n            cloned.xmin = thisBox.xmin;\n          }\n\n          if (thisBox.ymin < cloned.ymin)\n          {\n            cloned.ymin = thisBox.ymin;\n          }\n\n          if (thisBox.xmax > cloned.xmax)\n          {\n            cloned.xmax = thisBox.xmax;\n          }\n\n          if (thisBox.ymax > cloned.ymax)\n          {\n            cloned.ymax = thisBox.ymax;\n          }\n\n          currentBox = cloned;\n        }\n      }\n    }\n\n    if (currentBox)\n    {\n      boardMethods.current?.resetZoom(currentBox);\n    }\n    else \n    {      \n      boardMethods.current?.resetZoom();\n    }\n  };\n\n  useEffect(() => {    \n    let callback = () => setTimeout(zoomToFit, 100);\n    window.addEventListener(\"orientationchange\", callback);\n\n    return () => window.removeEventListener(\"orientationchange\", callback);\n  }, []);\n\n  useEffect(() => {\n\n    window.onhashchange = function() {\n      // do stuff\n      window.location.reload();\n    };\n    \n    return () => { window.onhashchange = null };\n  }, []);\n\n  useEffect(() => {\n    const workshopLoad = async () => {\n      \n      try {\n\n        // Fixed for now.\n        var workshopData = await loadWorkshop(workshopUrl);\n\n        setWorkshopName(workshopData.name);\n\n        // Look for any existing workshop data.\n        var existingData = localStorage.getItem(`data_${workshopUrl}`);\n\n        var loadedImages = workshopData.images.map(url => ({\n          url,\n          inUse: false,\n          initialX: 0,\n          initialY: 0,\n          rotate: 0\n        }));\n\n        let orderedImages = loadedImages;\n  \n        if (existingData)\n        {\n          var parsedData = JSON.parse(existingData) as SavedWorkshopState;\n\n          if (parsedData)\n          {\n            // Use our loaded images.\n            setBackgroundColor(parsedData.backgroundColor);\n\n            let savedImages = parsedData.images.map(cachedImg => ({\n              inUse: cachedImg.inUse,\n              url: cachedImg.url,\n              initialX: cachedImg.x,\n              initialY: cachedImg.y,\n              rotate: cachedImg.rotate\n            }));\n\n            // Empty the ordered images set.\n            orderedImages = savedImages;\n\n            let visitedImages = savedImages.map(() => false);\n\n            // Make sure we have all the images.\n            loadedImages.forEach(img => {\n              const savedImgIdx = orderedImages.findIndex(v => v.url === img.url);\n              if (savedImgIdx !== -1)\n              {\n                visitedImages[savedImgIdx] = true;\n                img.inUse = orderedImages[savedImgIdx].inUse;\n              }\n              else\n              {\n                orderedImages.push({ url: img.url, inUse: false, initialX: 0, initialY: 0, rotate: 0 });\n              }\n            });\n\n            // Now, any 'visited images' that are false are images that have been removed.\n            visitedImages.forEach((wasVisited, idx) => {\n\n              if (!wasVisited)\n              {\n                orderedImages.splice(idx, 1);\n              }\n\n            });\n          }\n        }\n\n        setWorkshopImages(loadedImages);\n        setOrderedImages(orderedImages);\n\n        // Define a cached set of image states.\n        cachedImageStates.current = orderedImages.map(img => ({ \n          url: img.url, \n          inUse: img.inUse, \n          rotate: img.rotate, \n          borderPoints: \"\", \n          rawPolygon: new Flatten.Polygon(), \n          transformedPolygon: new Flatten.Polygon(),\n          boundingRect: { left: img.initialX, top: img.initialY, right: 0, bottom: 0 }, \n          imageSize: { width: 0, height: 0 } }));\n      }\n      catch(e)\n      {\n        // Display any errors.\n        console.error(e);\n      }\n    }\n\n    workshopLoad();\n  }, [workshopUrl]);\n\n  const saveState = useCallback(() =>\n  {\n    if (!workshopUrl || !orderedImages || !cachedImageStates.current)\n    {\n      return;\n    }\n\n    // Save to local storage.\n    const data : SavedWorkshopState = { \n      backgroundColor,\n      images: orderedImages.map((img) => {\n\n        // Find the item in the cache so we definitely have the latest rotate and bounding rectangle.\n        var cacheItem = cachedImageStates.current?.find(cache => cache && cache.url === img.url);\n\n        if (cacheItem)\n        {\n          return { url: img!.url, inUse: img!.inUse, x: cacheItem.boundingRect.left, y: cacheItem.boundingRect.top, rotate: cacheItem.rotate };\n        }\n        else {\n          return { url: img!.url, inUse: img!.inUse, x: img.initialX, y: img.initialY, rotate: img.rotate };\n        }\n      })\n    };\n\n    localStorage.setItem(`data_${workshopUrl}`, JSON.stringify(data));\n  }, [backgroundColor, orderedImages, workshopUrl]);\n\n  useEffect(() => {\n\n    saveState();\n    \n  }, [backgroundColor, orderedImages, workshopUrl, saveState]);\n\n  const updateImageState = useCallback((state: ImageState) => {\n\n    var imgData = cachedImageStates.current;\n    \n    if (!imgData)\n    {\n      return;\n    }\n\n    // Find the item in the array and update it.\n    var idx = imgData.findIndex(img => img && img.url === state.url);\n\n    var firstLoad = !imgData[idx]?.borderPoints;\n\n    // Merge state, but keep the inUse flag.\n    imgData[idx] = {...state, inUse: imgData[idx]!.inUse };\n\n    // Do we need to do our first zoom?\n    // If all in-use images have border points, we can zoom.\n    if (firstLoad && imgData.findIndex(img => img?.inUse && !img.borderPoints) === -1)\n    {\n      // All in-use images loaded.\n      zoomToFit();\n    }\n\n  }, []);\n\n  const handleImageEnter = (state: ImageState) => {    \n    setHoverImageData(state);\n  }\n\n  const handleImageLeave = (state: ImageState) => {\n    setHoverImageData(null);\n  }\n\n  const handleMove = (state: ImageState) => {\n    setMovingImageData(state);\n  }\n\n  const handleMoveEnd = (state: ImageState) => {\n    setBoardMotionActive(true);\n    setMovingImageData(null);\n\n    if (hoverImageData && hoverImageData.url === state.url)\n    {\n      setHoverImageData(state);\n    }\n\n    if (selectedImageData && selectedImageData.url === state.url)\n    {\n      setSelectedImageData(state);\n    }\n\n    updateImageState(state);    \n\n    saveState();\n  }\n\n  const handleSelect = (state: ImageState) => {\n    setSelectedImageData(state);\n  }\n\n  const intersects = (r1: ImageState, r2: ImageState) =>\n  { \n    var boolOp = Flatten.BooleanOperations;\n\n    if (r1.transformedPolygon.box.not_intersect(r2.transformedPolygon.box))\n    {\n      return false;\n    }\n\n    if (r1.transformedPolygon.intersect(r2.transformedPolygon).length > 0)\n    {\n      return true;\n    }\n\n    var clip = boolOp.innerClip(r1.transformedPolygon, r2.transformedPolygon);\n\n    if (clip[0].length > 0 || clip[1].length > 0)\n    {\n      return true;\n    }\n\n    return false;\n  }\n\n  const handleImageZOrderChange = (image: ImageState, newIdxFunc: (existingIdx: number, currentImageState: ImageState, allImages: (ImageState | null)[]) => number) => {\n\n    var cachedImages = cachedImageStates.current;\n\n    if (!cachedImages) {\n      return;\n    }\n\n    // To move the image up one, we first find the position of the image in the array.\n    // Then we walk up the array, find the next element with an overlapping bounding box.\n    // If we don't find one, it goes at the top.\n    var cacheItemIdx = cachedImages.findIndex(cImg => cImg?.url === image.url);\n\n    if (cacheItemIdx === -1)\n    {\n      // Image is not in our cache? Not sure how that happens.\n      return;\n    }\n\n    var cacheItem = cachedImages[cacheItemIdx]!;\n\n    let moveToIdx = newIdxFunc(cacheItemIdx, cacheItem, cachedImages);\n    \n    if (moveToIdx === cacheItemIdx)\n    {\n      // Nothing to do.\n      return;\n    }\n\n    // Remove the item from one location.\n    cachedImages.splice(cacheItemIdx, 1);\n\n    if (moveToIdx < cacheItemIdx)\n    {\n      moveToIdx++;\n    }\n    else \n    {\n      moveToIdx--;\n    }\n\n    // Now put it back in another one.\n    cachedImages.splice(moveToIdx, 0, cacheItem);\n\n    // Now do the same thing for the image state list.\n    let newState = [...orderedImages];\n    var removed = newState.splice(cacheItemIdx, 1);\n    newState.splice(moveToIdx, 0, removed[0]);\n\n    setOrderedImages(newState);\n  }\n\n  const forwardZOrder = (existingIdx: number, currentImageState: ImageState, allImages: (ImageState | null)[]) => {\n    \n    // Go through the set, starting from the next element.\n    for (let testItemIdx = existingIdx + 1; testItemIdx < allImages.length; testItemIdx++)\n    {\n      var testItem = allImages[testItemIdx];\n\n      if(testItem && testItem.inUse && intersects(testItem, currentImageState))\n      {\n        return testItemIdx + 1;\n      }\n    }\n\n    // Already at the top, nothing to do.\n    return existingIdx;\n  }\n  \n  const backZOrder = (existingIdx: number, currentImageState: ImageState, allImages: (ImageState | null)[]) => {\n    \n    // Go through the set, starting from the next element.\n    for (let testItemIdx = existingIdx - 1; testItemIdx >= 0; testItemIdx--)\n    {\n      var testItem = allImages[testItemIdx];\n\n      if(testItem && testItem.inUse && intersects(testItem, currentImageState))\n      {\n        return testItemIdx - 1;\n      }\n    }\n\n    // Already at the bottom, nothing to do.\n    return existingIdx;\n  };\n\n  const deleteAll = () => {\n    setWorkshopImages(workshopImages.map(img => ({...img, inUse: false})));\n    setOrderedImages(orderedImages.map(img => ({...img, inUse: false})));\n    cachedImageStates.current!.forEach(state => { if(state) { state.inUse = false; } });\n  };\n\n  const toggleUseImage = (url: string, use: boolean) =>\n  {\n    var workshopItemIdx = workshopImages.findIndex(img => img.url === url);\n\n    if (workshopItemIdx === -1)\n    {\n      return;\n    }\n\n    if (workshopImages[workshopItemIdx].inUse === use)\n    {\n      // Nothing to do.\n      return;\n    }\n\n    var newImages = [...workshopImages];\n\n    newImages[workshopItemIdx].inUse = use;\n\n    setWorkshopImages(newImages);\n\n    var newOrderedImages = [...orderedImages];\n\n    var orderedIdx = orderedImages.findIndex(img => img.url === url);\n\n    if (orderedIdx === -1)\n    {\n      // Not sure how this would ever happen?\n      console.warn(\"Image in general list but not in ordered list.\");\n      return;\n    }\n\n    var item = newOrderedImages[orderedIdx];\n    item.inUse = use;\n    \n    if (use)\n    {\n      newOrderedImages.splice(orderedIdx, 1);\n      newOrderedImages.push(item);\n    }\n\n    setOrderedImages(newOrderedImages);\n\n    // And finally update the cached image data.\n    var imgStates = cachedImageStates.current!;\n    var currentState = imgStates[orderedIdx];\n    currentState!.inUse = use;\n\n    if (use)\n    {\n      imgStates.splice(orderedIdx, 1);\n      imgStates.push(currentState);\n\n      if (currentState?.borderPoints)\n      {\n        // We already have calculated sizing information for the image.\n        // Zoom to fit the new image.\n        zoomToFit();\n      }\n    }\n    else \n    {\n      setSelectedImageData(null);\n    }\n  };  \n\n  const rotationChanged = (selectedImage: ImageState, rotationDeg: number) => {\n\n    var newState = { ...selectedImage, rotate: rotationDeg };\n\n    updateImageState(newState);\n    \n    if (selectedImageData && selectedImageData.url === newState.url)\n    {\n      setSelectedImageData(newState);\n    }\n\n    // Update the image.\n    let newOrderedImages = [...orderedImages];\n\n    // Find the right index.\n    var orderedIdx = newOrderedImages.findIndex(img => img.url === selectedImage.url);\n\n    newOrderedImages[orderedIdx].rotate = rotationDeg;\n\n    setOrderedImages(newOrderedImages);\n  }\n\n  const rotationEnded = (selectedImage: ImageState, rotationDeg: number) => {\n    \n    var newState = { ...selectedImage, rotate: rotationDeg };\n\n    if (selectedImageData && selectedImageData.url === newState.url)\n    {\n      setSelectedImageData(newState);\n    }\n\n    updateImageState(newState);\n\n    saveState();\n  }\n\n  const transformChanged = useCallback((transform: Transform) => {\n\n    setInteractionTransform(transform);\n\n  }, [setInteractionTransform]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">      \n        <Board ref={boardMethods} showWaterMark={workshop.toLowerCase() === 'default'} backgroundColor={backgroundColor} motionActive={boardMotionActive} onTransformChanged={transformChanged} onBackgroundClicked={() => setSelectedImageData(null)}>\n          {orderedImages.filter(img => img.inUse).map(img => \n            (<Image \n                canvas={processingCanvasEl.current!} \n                url={img.url}\n                key={img.url}\n                glued={false}\n                initialX={img.initialX}\n                initialY={img.initialY}\n                rotate={img.rotate}\n                dragScale={interactionTransform.scale}\n                onInitialStateAvailable={updateImageState}\n                onMovingStart={() => setBoardMotionActive(false)}\n                onMove={handleMove}\n                onMouseEnter={handleImageEnter}\n                onMouseLeave={handleImageLeave}\n                onMovingEnd={handleMoveEnd}\n                onSelect={handleSelect} />) )}    \n          <SelectionLayer hoverImage={hoverImageData} selectedImage={movingImageData ?? selectedImageData} key=\"_selection\" />\n        </Board>\n        <InteractionLayer selectedImage={movingImageData ?? selectedImageData} currentBoardTransform={interactionTransform} onRotationChanged={rotationChanged} onRotationEnded={rotationEnded} />\n        <OptionBar activeImage={selectedImageData}\n                  boardBackgroundColor={backgroundColor}\n                  workshopName={workshopName}\n                  allImages={workshopImages}\n                  onZoomToFit={() => zoomToFit()}\n                  onUpOne={() => handleImageZOrderChange(selectedImageData!, forwardZOrder)}\n                  onDownOne={() => handleImageZOrderChange(selectedImageData!, backZOrder)}\n                  onRemoveImage={() => toggleUseImage(selectedImageData!.url, false)}\n                  onUseImage={url => toggleUseImage(url, true)}\n                  onBackgroundColorChange={color => setBackgroundColor(color)}    \n                  onDeleteAll={deleteAll}\n                  onHeadingClicked={() => setSelectedImageData(null)}\n                  />\n        <canvas ref={processingCanvasEl} className={classes.computeCanvas} />\n      </div>  \n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}